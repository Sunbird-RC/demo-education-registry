// Code generated by go-swagger; DO NOT EDIT.

package sample_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"bulk_issuance/swagger_gen/models"
)

// GetV1SampleSchemaNameOKCode is the HTTP code returned for type GetV1SampleSchemaNameOK
const GetV1SampleSchemaNameOKCode int = 200

/*GetV1SampleSchemaNameOK OK

swagger:response getV1SampleSchemaNameOK
*/
type GetV1SampleSchemaNameOK struct {
	/*

	 */
	ContentDisposition string `json:"Content-Disposition"`

	/*
	  In: Body
	*/
	Payload models.SampleTemplateResponse `json:"body,omitempty"`
}

// NewGetV1SampleSchemaNameOK creates GetV1SampleSchemaNameOK with default headers values
func NewGetV1SampleSchemaNameOK() *GetV1SampleSchemaNameOK {

	return &GetV1SampleSchemaNameOK{}
}

// WithContentDisposition adds the contentDisposition to the get v1 sample schema name o k response
func (o *GetV1SampleSchemaNameOK) WithContentDisposition(contentDisposition string) *GetV1SampleSchemaNameOK {
	o.ContentDisposition = contentDisposition
	return o
}

// SetContentDisposition sets the contentDisposition to the get v1 sample schema name o k response
func (o *GetV1SampleSchemaNameOK) SetContentDisposition(contentDisposition string) {
	o.ContentDisposition = contentDisposition
}

// WithPayload adds the payload to the get v1 sample schema name o k response
func (o *GetV1SampleSchemaNameOK) WithPayload(payload models.SampleTemplateResponse) *GetV1SampleSchemaNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 sample schema name o k response
func (o *GetV1SampleSchemaNameOK) SetPayload(payload models.SampleTemplateResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1SampleSchemaNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Content-Disposition

	contentDisposition := o.ContentDisposition
	if contentDisposition != "" {
		rw.Header().Set("Content-Disposition", contentDisposition)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1SampleSchemaNameNotFoundCode is the HTTP code returned for type GetV1SampleSchemaNameNotFound
const GetV1SampleSchemaNameNotFoundCode int = 404

/*GetV1SampleSchemaNameNotFound Not found

swagger:response getV1SampleSchemaNameNotFound
*/
type GetV1SampleSchemaNameNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1SampleSchemaNameNotFound creates GetV1SampleSchemaNameNotFound with default headers values
func NewGetV1SampleSchemaNameNotFound() *GetV1SampleSchemaNameNotFound {

	return &GetV1SampleSchemaNameNotFound{}
}

// WithPayload adds the payload to the get v1 sample schema name not found response
func (o *GetV1SampleSchemaNameNotFound) WithPayload(payload string) *GetV1SampleSchemaNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 sample schema name not found response
func (o *GetV1SampleSchemaNameNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1SampleSchemaNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
