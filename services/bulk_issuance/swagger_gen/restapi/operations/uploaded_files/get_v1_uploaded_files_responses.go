// Code generated by go-swagger; DO NOT EDIT.

package uploaded_files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetV1UploadedFilesOKCode is the HTTP code returned for type GetV1UploadedFilesOK
const GetV1UploadedFilesOKCode int = 200

/*GetV1UploadedFilesOK OK

swagger:response getV1UploadedFilesOK
*/
type GetV1UploadedFilesOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetV1UploadedFilesOK creates GetV1UploadedFilesOK with default headers values
func NewGetV1UploadedFilesOK() *GetV1UploadedFilesOK {

	return &GetV1UploadedFilesOK{}
}

// WithPayload adds the payload to the get v1 uploaded files o k response
func (o *GetV1UploadedFilesOK) WithPayload(payload interface{}) *GetV1UploadedFilesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 uploaded files o k response
func (o *GetV1UploadedFilesOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1UploadedFilesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1UploadedFilesNotFoundCode is the HTTP code returned for type GetV1UploadedFilesNotFound
const GetV1UploadedFilesNotFoundCode int = 404

/*GetV1UploadedFilesNotFound Not found

swagger:response getV1UploadedFilesNotFound
*/
type GetV1UploadedFilesNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1UploadedFilesNotFound creates GetV1UploadedFilesNotFound with default headers values
func NewGetV1UploadedFilesNotFound() *GetV1UploadedFilesNotFound {

	return &GetV1UploadedFilesNotFound{}
}

// WithPayload adds the payload to the get v1 uploaded files not found response
func (o *GetV1UploadedFilesNotFound) WithPayload(payload string) *GetV1UploadedFilesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 uploaded files not found response
func (o *GetV1UploadedFilesNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1UploadedFilesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
